{"version":3,"file":"build.js","sources":["../src/utils/color.js","../src/utils/alpha.js","../src/utils/image.js","../src/utils/display.js","../src/index.js"],"sourcesContent":["let canvas  = document.createElement('canvas')\nlet context = canvas.getContext('2d')\n\nexport default { isHex, toHex, toRGB }\n\nfunction isHex(value) {\n  return value[0] === '#' && parseInt(value.slice(1), 16) < 16777215\n}\n\nfunction toHex(color) {\n  if (Array.isArray(color))\n    return '#' + color.map(channel => channel < 16 ? '0' + channel : channel.toString(16)).join('')\n  context.fillStyle = color\n  return context.fillStyle\n}\n\nfunction toRGB(hex) {\n  if (!isHex(hex))\n    hex = toHex(hex)\n  let rgb = []\n  for (let i = 3; i--;)\n    rgb[i] = parseInt(hex.slice(i * 2 + 1, (i + 1) * 2 + 1), 16)\n  return rgb\n}\n","import Color from './color'\n\nexport default { process }\n\nfunction process(images, ...colors) {\n  if (!Array.isArray(images))\n    images = [images]\n  let processed = []\n  for (let image of images) {\n    for (let color of colors)\n      image = processOne(Color.toRGB(color), image)\n    processed.push(image)\n  }\n  if (processed.length === 1)\n    return processed[0]\n  return processed\n}\n\nfunction processOne(key, image) {\n\n  let [red, green, blue] = key\n  let { width, height }  = image\n\n  let canvas = document.createElement('canvas')\n  canvas.width  = width\n  canvas.height = height\n\n  let context = canvas.getContext('2d')\n  context.drawImage(image, 0, 0)\n\n  let imageData = context.getImageData(0, 0, width, height)\n  let data = imageData.data\n\n  let area = width * height\n  for (let i = area; i--;) {\n    let index = i * 4\n    let [r, g, b, a] = data.slice(index, index + 4)\n    if (a && r === red && g === green && b === blue) {\n      data[index]     = 0\n      data[index + 1] = 0\n      data[index + 2] = 0\n      data[index + 3] = 0\n    }\n  }\n\n  context.putImageData(imageData, 0, 0)\n\n  return canvas\n\n}\n","let regex = /^\\/?(?:.+\\/)*(.+)\\./\n\nexport default { load }\n\nfunction load(paths, callback) {\n  if (!callback)\n    return\n  if (!Array.isArray(paths))\n    return loadOne(paths, callback)\n  let images = []\n  let index  = 0\n  let max    = paths.length\n  let path   = paths[index]\n  let loaded = [path]\n  function next(image) {\n    let id = regex.exec(path)[1]\n    if (!images[id])\n      images[id] = image\n    else\n      images[id] = [images[id], image]\n    images[index++] = image\n    if (index >= max)\n      return callback(images)\n    path = paths[index]\n    loadOne(path, next)\n  }\n  loadOne(path, next)\n}\n\nfunction loadOne(path, callback) {\n  if (!callback)\n    return\n  let image = new Image\n  image.src = path\n  image.onload = function () {\n    callback(image)\n  }\n}\n","export default { create }\n\nfunction create(size) {\n\n  let [width, height] = size\n\n  let canvas  = document.createElement('canvas')\n  canvas.width = width\n  canvas.height = height\n\n  let context = canvas.getContext('2d')\n\n  return {\n    width, height, context,\n    mount, clear, render\n  }\n\n  function mount(element) {\n    if (typeof element === 'string')\n      element = document.querySelector(element)\n    if (!element)\n      throw new TypeError(`Cannot mount display on element ${element}`)\n    element.appendChild(canvas)\n    clear()\n  }\n\n  function clear() {\n    context.fillStyle = 'black'\n    context.fillRect(0, 0, width, height)\n  }\n\n  function render() {\n\n  }\n\n}\n","import { Alpha, Image, Display } from './utils/index'\n\nconst WORLD_SIZE = 9\n\nlet display = Display.create([320, 240])\nlet world = new Uint8ClampedArray(WORLD_SIZE * WORLD_SIZE)\n\nImage.load(['floor.png', 'wall.png', 'shadow.png'], setup)\n\nfunction setup(sprites) {\n  display.mount('#app')\n\n  let [floor, wall, shadow] = sprites = Alpha.process(sprites, 'magenta')\n\n  let tileWidth  = floor.width / 2\n  let tileHeight = tileWidth / 2\n\n  let size = WORLD_SIZE\n  let area = size * size\n  for (let i = 0; i < area; i++) {\n    let cx = i % size\n    let cy = (i - cx) / size\n    if ((!cx || !cy || cx === size - 1 || cy === size - 1) && cx !== 4 && cy !== 4)\n      world[i] = 1\n    let id = world[i]\n    let sprite = sprites[id]\n    let elevation = (sprite.height - tileWidth) / tileHeight - 1\n    let x = display.width  / 2 + (cx - cy - 1) * tileWidth\n    let y = display.height / 2 + (cx + cy) * tileHeight - size / 2 * tileWidth\n    display.context.drawImage(sprite, x, y - elevation * tileHeight)\n    if (world[i] !== 0 || cx - 1 < 0 || world[cy * size + cx - 1] !== 1)\n      continue\n    display.context.drawImage(shadow, x, y)\n  }\n  loop()\n}\n\nfunction loop() {\n\n}\n"],"names":["canvas","document","createElement","context","getContext","isHex","toHex","toRGB","value","parseInt","slice","color","Array","isArray","map","channel","toString","join","fillStyle","hex","rgb","i","process","images","processed","colors","image","processOne","Color","push","length","key","red","green","blue","width","height","drawImage","imageData","getImageData","data","area","index","r","g","b","a","putImageData","regex","load","paths","callback","loadOne","max","path","loaded","next","id","exec","Image","src","onload","create","size","clear","render","mount","element","querySelector","TypeError","appendChild","fillRect","WORLD_SIZE","display","Display","world","Uint8ClampedArray","setup","sprites","Alpha","floor","wall","shadow","tileWidth","tileHeight","cx","cy","sprite","elevation","x","y","loop"],"mappings":"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"}