{"version":3,"file":"build.js","sources":["../src/utils/color.js","../src/utils/alpha.js","../src/utils/image.js","../src/utils/display.js","../src/index.js"],"sourcesContent":["let canvas  = document.createElement('canvas')\nlet context = canvas.getContext('2d')\n\nexport default { isHex, toHex, toRGB }\n\nfunction isHex(value) {\n  return value[0] === '#' && parseInt(value.slice(1), 16) < 16777215\n}\n\nfunction toHex(color) {\n  if (Array.isArray(color))\n    return '#' + color.map(channel => channel < 16 ? '0' + channel : channel.toString(16)).join('')\n  context.fillStyle = color\n  return context.fillStyle\n}\n\nfunction toRGB(hex) {\n  if (!isHex(hex))\n    hex = toHex(hex)\n  let rgb = []\n  for (let i = 3; i--;)\n    rgb[i] = parseInt(hex.slice(i * 2 + 1, (i + 1) * 2 + 1), 16)\n  return rgb\n}\n","import Color from './color'\n\nexport default { process }\n\nfunction process(colors, ...images) {\n  if (!Array.isArray(colors))\n    colors = [colors]\n  let processed = []\n  for (let image of images) {\n    for (let color of colors)\n      image = processOne(Color.toRGB(color), image)\n    processed.push(image)\n  }\n  if (processed.length === 1)\n    return processed[0]\n  return processed\n}\n\nfunction processOne(key, image) {\n\n  let [red, green, blue] = key\n  let { width, height }  = image\n\n  let canvas = document.createElement('canvas')\n  canvas.width  = width\n  canvas.height = height\n\n  let context = canvas.getContext('2d')\n  context.drawImage(image, 0, 0)\n\n  console.log(canvas.toDataURL())\n\n  let imageData = context.getImageData(0, 0, width, height)\n  let data = imageData.data\n\n  let area = width * height\n  for (let i = area; i--;) {\n    let index = i * 4\n    let [r, g, b, a] = data.slice(index, index + 4)\n    if (a && r === red && g === green && b === blue) {\n      data[index]     = 0\n      data[index + 1] = 0\n      data[index + 2] = 0\n      data[index + 3] = 0\n    }\n  }\n\n  context.putImageData(imageData, 0, 0)\n\n  console.log(canvas.toDataURL())\n\n  return canvas\n\n}\n","let regex = /^\\/?(?:.+\\/)*(.+)\\./\n\nexport default { load }\n\nfunction load(paths, callback) {\n  if (!callback)\n    return\n  if (!Array.isArray(paths))\n    return loadOne(paths, callback)\n  let images = []\n  let index  = 0\n  let max    = paths.length\n  let path   = paths[index]\n  let loaded = [path]\n  function next(image) {\n    let id = regex.exec(path)[1]\n    if (!images[id])\n      images[id] = image\n    else\n      images[id] = [images[id], image]\n    images[index++] = image\n    if (index >= max)\n      return callback(images)\n    path = paths[index]\n    loadOne(path, next)\n  }\n  loadOne(path, next)\n}\n\nfunction loadOne(path, callback) {\n  if (!callback)\n    return\n  let image = new Image\n  image.src = path\n  image.onload = function () {\n    callback(image)\n  }\n}\n","export default { create }\n\nfunction create(size) {\n\n  let [width, height] = size\n\n  let canvas  = document.createElement('canvas')\n  canvas.width = width\n  canvas.height = height\n\n  let context = canvas.getContext('2d')\n\n  return {\n    width, height, context,\n    mount, clear, render\n  }\n\n  function mount(element) {\n    if (typeof element === 'string')\n      element = document.querySelector(element)\n    if (!element)\n      throw new TypeError(`Cannot mount display on element ${element}`)\n    element.appendChild(canvas)\n    clear()\n  }\n\n  function clear() {\n    context.fillStyle = 'black'\n    context.fillRect(0, 0, width, height)\n  }\n\n  function render() {\n\n  }\n\n}\n","import { Alpha, Image, Display } from './utils/index'\n\nlet display = Display.create([320, 240])\n\nImage.load(['floor.png', 'wall.png'], setup)\n\nfunction setup(sprites) {\n  display.mount('#app')\n\n  let floor = Alpha.process('magenta', sprites.floor)\n\n  let width  = 16\n  let height = 8\n\n  let side = 8\n  let area = side * side\n  for (let i = 0; i < area; i++) {\n    let x = i % side\n    let y = (i - x) / side\n    display.context.drawImage(floor, display.width / 2 + (x - y - 1) * width, display.height / 2 + (x + y) * height - side / 2 * width)\n  }\n  loop()\n}\n\nfunction loop() {\n\n}\n"],"names":["canvas","document","createElement","context","getContext","isHex","toHex","toRGB","value","parseInt","slice","color","Array","isArray","map","channel","toString","join","fillStyle","hex","rgb","i","process","colors","processed","images","image","processOne","Color","push","length","key","red","green","blue","width","height","drawImage","log","toDataURL","imageData","getImageData","data","area","index","r","g","b","a","putImageData","regex","load","paths","callback","loadOne","max","path","loaded","next","id","exec","Image","src","onload","create","size","clear","render","mount","element","querySelector","TypeError","appendChild","fillRect","display","Display","setup","sprites","floor","Alpha","side","x","y","loop"],"mappings":"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"}